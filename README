Scallion (c) 2010-2012 Rob Jansen jansen@cs.umn.edu

A. Dependencies
---------------
Scallion requires Shadow >= 1.3.0, GLib >= 2.28, CMake >= 2.6, python 2.7

OpenSSL and Libevent2 may require special args, depending on your system. See
contrib/insalldeps.sh to install them to ~/.shadow/

B. Setup
--------
The setup.py script will help you configure, build, and install scallion. It has 
an extensive help menu which can be accessed with:
$ python setup.py --help

The default and recommended setup is to install to ~/.shadow as follows:
$ python setup.py build
$ python setup.py install

All build output is generated out-of-source, by default to the ./build directory.
The setup.py script is a wrapper to cmake and make. Using cmake and make directly
is also possible, but strongly discouraged. Installing scallion installs a
wrapper script for Shadow that assists in running the scallion plug-in to Shadow. 

C. Running Scallion
-------------------
Scallion works by running as a Shadow plug-in, launching a Tor network, and
using the file transfer plugin from Shadow to download files through the private
testing Tor network. The easiest way to get started is to use the included
small example, and modify as necessary. Everything that is needed is included in
the resource/ directory.

An example experiment may be run as follows:
$ cd resource
$ scallion clean
$ scallion run

The "clean" command clears out the data directories used by Tor nodes, and must
be run between every experiment run from the same directory. The "run" command
is used to launch an experiment using resource/scallion.xml. Output is stored
in the data directory, relative to the working directory when running scallion.
Shadow and Tor output from all nodes is stored in data/scallion.log, and CPU and
other system information is logged over the experiment using dstat to 
data/dstat.log.
