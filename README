TODO

Dependencies:
Cmake >= 2.6
Flex
Bison
Python2.7
pygeoip >= 0.1.6

=============================
STANDARD INSTALL quickstart (requires root priveledges):
 -install to /usr/local
=============================
wget http://www.openssl.org/source/openssl-1.0.0d.tar.gz
./config -fPIC shared
make
sudo make install

wget http://monkey.org/~provos/libevent-2.0.11-stable.tar.gz
./configure CFLAGS="-fPIC"
make
sudo make install

wget shadow-1.0.0
python setup.py build
sudo python setup.py install

wget scallion-1.0.0
python setup.py build
sudo python setup.py install

=============================
LOCAL INSTALL quickstart (replace "rob" with your username):
 -install to ~/.local
=============================
wget http://www.openssl.org/source/openssl-1.0.0d.tar.gz
./config --prefix=/home/rob/.local -fPIC shared
make
make install

wget http://monkey.org/~provos/libevent-2.0.11-stable.tar.gz
./configure --prefix=/home/rob/.local CFLAGS="-fPIC -I/home/rob/.local" LDFLAGS="-L/home/rob/.local"
make
make install

wget shadow-1.0.0
python setup.py auto

wget scallion-1.0.0
python setup.py auto


==================
Developer's Notes:
==================
If you want to be able to run scallion through valgrind, you should configure openssl 
with the additional option: "-DPURIFY". This fixes openssl so it doesn't break valgrind.

Scallion
Scallion is a special plugin for shadow that allows shadow to run the Tor
(torproject.org) software. There are several modifications to Tor that must be
made to allow this to happen. Those modifications are stored on a branch of a 
clone of the Tor git master repository. This way, patches can be created for
any version of Tor by merging new changes into the local scallion branch. Our
current approach is to create patches from a diff of archived Tor releases and
our scallion branch, so that others can simply download the correct release,
apply our patch, and run scallion in shadow.

Scallion also requires some other libs to be locally installed, like libevent
and openssl. Of course, the shadowrunner.py script will handle all of the dirty 
work for you. However, patches must be created and their paths are currently 
hard-coded. To create a patch, first export the scallion branch from git with 
something like:

$ git archive --prefix=tor-0.2.2.15-alpha-scallion/ scallion | gzip > tor-0.2.2.15-alpha-scallion.tar.gz

Then download the tor-0.2.2.15-alpha.tar.gz release from archive.torproject.org,
extract both tar files, and create the patch:

$ diff -Naur tor-0.2.2.15-alpha tor-0.2.2.15-alpha-scallion > tor-0.2.2.15-alpha.scallion.patch

Place the patch in contrib/patches. Note - you may want to remove the 'doc' and
and the 'WIN32Build' directories from the extracted trees in order to reduce the
size of the created patch file. If needed, the shadowrunner.py script will 
automatically download the correct version of Tor apply the patch:

$ patch -Np1 --batch -i path/to/tor-0.2.2.15-alpha.scallion.patch

TODO: enable multiple versions of tor/scallion to be built and run.